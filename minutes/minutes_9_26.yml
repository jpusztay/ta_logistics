date: September 26, 2016
meeting_type: group
attendance: [<komlanaz>, <josephpu>, <jrhoeber>, <fgpinnoc>]
absent: []
excused_absences: [ # Any legitamite excuses for absent team members
  {ubit: <>, : reason: },
  {ubit: <>, reason: }
  ]
task_progress: [ # All group members must be included here even if they haven't made any progress since the last meeting
  {ubit: <josephpu>, progress: Met with Carl/Atri and gathered more details on the project req, looked into google auth for our application},
  {ubit: <komlanaz>, progress: Met with Carl/Atri and gathered more details on the project req},
  {ubit: <jrhoeber>, progress: Met with Carl/Atri and gathered more details on the project req, prepared outline for meeting, django mvc setup in git},
  {ubit: <fgpinnoc>, progress: Met with Carl/Atri and gathered more details on the project req},
  ]
issues: [ # Post any issues here. Issues that cannot be addressed by the group should especially be included
  ]
Notes:  | # Anything covered in the meeting that doesn't fit elsewhere.

  Login Pages (Current index page)
    Welcome message
    Username/password inputs
    create account link (for people who don’t have accounts yet)
    Redirect to student account creation page

  Student Pages
    Account creation page
    Profile where they can insert info
    Scheduling page (What classes they are taking next semester?)
    (main) Class view where they can select a class and apply

  Professors
    Profile page
    Create class page (Template with option to add other fields)
    Request approval for budgeted hours
  Defaults non-removable - Ubit, names, gpa, class grade, resume, personal statement, Teaching experience, # of hours

  Other possible options
    Programming language comfort level
    unoffish transcript
    Schedule slot for demo (After initial check if grades are high enough & stuff)
    (main) Applicants page
    Table with applicants, columns have relevant info (Interview button, rejection button)

  Future - Matching algorithm options
    Different DB tables for each class

  Admins
    Create professor page
    Table of professors that can be updated
    Auto create accounts for selected professors
    Send email validation
    (main) Administrative stuff (TBD??)

  Authentication
    Students
      Gmail validation

  FUTURE - Make it easy to add UBIT auth

  Professors
    Create all professor accounts ahead of time & send emails
    The must change password during account set up
    Then they can create classes, accept applications, etc.

  Admins
    At least 1 must be created on launch to create professor accounts
    Admins can create other admins
    Edit/Override Student/Professor matchings
    Database admin role
    Tweak defaults list on application page
    Number of hours approval for each class (when professor requests approval)

  HR Role (Set up meeting with Jen & Donna)
    Jen - Email people they are planning to hire
    Donna - 495 credit

  Other Features/Requirements
    Research backups (Later)
    Modularity is the most important thing right now
    Treat the code we write as a framework that could be built upon
    Requirements will be tackled as modular steps after we set up the most basic form of a functioning application
    Document any requirements that we don’t get to so that we can advise people on how to add requirements
    Write Unit tests with Django code!
